name: CI

on:
  push:
    # Avoid duplicate builds on PRs.
    branches:
      - main
  pull_request:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: pub-hk-ubuntu-22.04-small # TODO: change to ubuntu-latest once repo is public
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update Rust toolchain
        run: rustup update
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Clippy
        run: cargo clippy --all-targets --locked -- --deny warnings
      - name: rustfmt
        run: cargo fmt -- --check

  unit-test:
    runs-on: pub-hk-ubuntu-22.04-small # TODO: change to ubuntu-latest once repo is public
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update Rust toolchain
        run: rustup update
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Run unit tests
        run: cargo test --locked

  integration-test:
    runs-on: ${{ matrix.arch == 'arm64' && 'pub-hk-ubuntu-22.04-arm-medium' || 'pub-hk-ubuntu-22.04-small' }} # TODO: change to ubuntu-latest once repo is public
    strategy:
      fail-fast: false
      matrix:
        builder: [ "builder:24", "builder:22" ]
        arch: [ "amd64", "arm64" ]
        exclude:
          - builder: "builder:22"
            arch: "arm64"
    env:
      INTEGRATION_TEST_CNB_BUILDER: heroku/${{ matrix.builder }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install musl-tools
        run: sudo apt-get install musl-tools --no-install-recommends
      - name: Update Rust toolchain
        run: rustup update
      - name: Install Rust linux-musl target
        run: rustup target add ${{ matrix.arch == 'arm64' && 'aarch64-unknown-linux-musl' || 'x86_64-unknown-linux-musl' }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Install Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.7.2
      - name: Pull builder image
        run: docker pull ${{ env.INTEGRATION_TEST_CNB_BUILDER }}
      - name: Run integration tests
        run: cargo test --locked -- --ignored --test-threads $(($(nproc)+1))
